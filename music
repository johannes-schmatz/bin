#!/bin/bash
#    music - script to play music from git repo
#    Copyright (C) 2020  Johannes Schmatz
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# set default band name:
band="queen"

# clone to porjekts/music if not there
if [[ ! -s ~/projekts/music/MUSIC_INFO ]]
then
	echo -n if you want to get the music \(in ~/projekts/music/\)enter uppercase yes:
	read -r val
	if [[ "$val" == "YES" ]];
	then
		cd ~/projekts || verbose "could not cd in ~/projekts"
		git clone johannes@pixy:/home/johannes/projekts/music.git
		cd - || verbose "clould not go back"
	fi
fi

function verbose(){
        [[ $verbose == 1 ]]&&echo "verbose: $*"
}

function info(){
        [[ $info == 1 ]]&&echo "$@"
}

num_args="$*"

play_all=0
random_play=0
play_loop=0
verbose=0
info=1

for i in $num_args
do
	case $1 in
		"-a") play_all=1	;	shift		;;
		"-r") random_play=1	;	shift		;;
		"-l") play_loop=1	;	shift		;;
		"-b") band="$2"		;	shift 2		;;
		"-v") verbose=1		;	shift		;;
		"-m") info=0		;	shift		;;
		*) song+="$1 "		;	shift		;;
	esac
done

verbose "verbose mode active"
verbose "band is $band"
verbose "all arguments: $num_args"
verbose "song contains: $song"
[[ $play_loop == 1 ]] && verbose "playing in loop"

function play(){
	num_args="$*"
	for i in $num_args
	do
		clear
		verbose "playing $i"
		info "$i"
		info "$band"
		$MUSIC_PLAYER ~/projekts/music/"$band"/*/"$i" 2>/dev/null >/dev/null
	done
}

function rand_play(){
	verbose "playing all titles form $band randomly in loop"
	info "loop"
	while true;
	do
		$MUSIC_PLAYER ~/projekts/music/"$band"/*/*  -shuffle 2>/dev/null >/dev/null
	done
}

function play_all(){
	verbose "play all titles from $band"
	info "$band"
	$MUSIC_PLAYER ~/"$MUSIC_DIR"/"$band"/*/* 2>/dev/null >/dev/null
}

function detect(){
	[[ $play_all == 1i ]] && play_all && return 0
	[[ $random_play == 1 ]] && rand_play && return 0
}

if [[ $play_loop == 1 ]]
then
	while true
	do
		detect
	done
fi

detect

exit 0

# syntax
# vim: ts=8 sts=8 sw=8 noet si syntax=bash
