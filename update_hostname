#!/bin/bash
#    update_hostname - script to update the hostname etc.
#    Copyright (C) 2020  Johannes Schmatz <johannes_schmatz@gmx.de>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

. ~/bin/bash.rc/ip.sh
. ~/bin/bash.rc/config.sh

function this_help(){
	echo "use $0 --help to show this text"
	echo "use $0 -a . . to update all (default)"
	echo "use $0 -c . . to update certs"
	echo "use $0 -s . . to update schul-cloud"
	echo "use $0 -m . . to send emails via mutt to the"
	echo ". . . . . . . people in $hostname_contacts_file"
	echo "use $0 -i . . to update the ip in $last_hostname_file"
	echo
	echo "emails in the hostname contact file:"
	cat $hostname_contacts_file
}

function certificate_update(){
	verb "Starting cert update"
	sudo /home/$USER/bin/cert.sh $HOSTNAME_4_OLD $HOSTNAME_4 $HOSTNAME_6_OLD $HOSTNAME_6
	verb "Done."
}

function schul-cloud_update(){
# TODO IDEA!!
# working with hooks in bin/update_hostname.d
# files can contain the following
#
# echo run the hook
#
# then source the files
	verb "Starting schul-cloud update"
	[[ -d /tmp/schul-cloud/ ]] || (
		mkdir /tmp/schul-cloud
		verb "generated dir /tmp/schul-cloud"
	)
	sed "s/127.0.0.1/$ONLINE_HOSTNAME/g" < ~/http/schul-cloud.html \
		> /tmp/schul-cloud/Lustiges_YT_Video.html
	echo "site is in /tmp/schul-cloud/* for schul-cloud.org"
	verb "Done."
}

function send_mail(){
	verb "Starting email sending"
	for i in $(cat $hostname_contacts_file); do
		echo -en "$C_YELLOW==>$C_NULL ${C_BLUE}Sending to$C_NULL "
		echo -e "$C_GREEN$i$C_NULL"
		mutt -s "NEW HOSTNAME" $i <<muttEOF
$IP_4
$HOSTNAME_4
$IP_6
$HOSTNAME_6
muttEOF
	done
	verb "Done."
}

function verb(){
	echo -e "$C_GREEN$C_B_BLUE$@$C_NULL"
}

function ip_update(){
	write_hostname_to_hostname_file $IP_4 $HOSTNAME_4 $IP_6 $HOSTNAME_6
}

for i in $@; do
	case $i in #((((((
		"-s") schul-cloud_update;;
		"-m") send_mail;;
		"-c") certificate_update;;
		"-i") ip_update;;
		"-a")
			certificate_update;
			send_mail;
			schul-cloud_update;
			ip_update;
		;;
		*) this_help;
	esac
done

#echo "INFO: to send the new hostname and IP to the other people in
#--> $_HOSTNAME_OTHER_FILE use 'hostname_update'" 1>&2
#
#echo "INFO: to create a new page /tmp/schul-cloud/* for schul-cloud.org
#--> use 'schul-cloud_update'" 1>&2
#function hostname_update(){
#	mutt -s "$HOSTNAME_OTHER_SUB" $HOSTNAME_OTHER_EMAIL <<<
#--> "$(echo -e "$ONLINE_IP\n$ONLINE_HOSTNAME")"
#}

# syntax
# vim: ts=8 sts=8 sw=8 noet si syntax=bash
